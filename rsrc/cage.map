tile "floor" { //1
	wall_opacity=0 //transparent from sides
	floor_opacity=15 //opaque from below
	ceiling_opacity=0 //transparent from above
	//this is actually the default, but it's here to show how the shorthand works.
	//it's equivalent to opacity=[0,15,0]
	//note that tilesense does not yet technically support any opacity levels besides
	//on and off, and will treat any non-zero value as 'opaque'.
	//this may change in the future, and tilesense will also be able to differentiate
	//between 'moving left opacity' and 'moving right opacity', for instance.
  movement_default="allow"
  draw {
    z=0
  	fore="#AACC55"
  	symbol='.'
  }
  draw {
    z=1
  	fore="#669900"
  	symbol=','
  }
  draw {
    z=2
  	fore="#336600"
  	symbol='_'
  }
	allow_desc="The moss and soil squish beneath your feet."
}

tile "wall" { //2
	uniform_opacity=0 //glass wall
  movement_default="deny"
  draw {
    z=0
  	fore="#FFFFFF"
  	symbol='#'
  }
  draw {
    z=1
  	fore="#BBBBBB"
  	symbol='='
  }
  draw {
    z=2
  	fore="#BBBBBB"
  	symbol='+'
  }
	deny_desc="The material is clear, but hard.  It stops you."
}

tile "shallow pool" { //3
//  floor_opacity=8  //could do this if there were stuff below for a watery effect?
//  ceiling_opacity=8 //see above
  action "splash" {
		on_enter
    grant "wet" {
      duration=60
			reason="splashed in shallow pool"
    }
  }
  movement_default="allow"
  draw {
    z=0
  	fore="#AAAAFF"
  	symbol='~'
  }
  draw {
    z=1
  	fore="#333366"
  	symbol='-'
  }
  draw {
    z=2
  	fore="#000033"
  	symbol='.'
  }
  allow_desc="The water feels pleasant and cool."
}

tile "dry passage" { //4
  wall_opacity=6
  floor_opacity=15
  ceiling_opacity=15
  //the combination of those three results in opacity=[6,15,15]
  movement_default="deny"
	movement {
		wet=true
	}
	/* could allow if both type a and type b are set:
	movement {
	  type_a=true
	  type_b=true
	}
	could allow if type a is set, but not type b:
	movement {
	  type_a=true
	  type_b=false
	}
	*/
  draw {
    z=0
  	fore="#F0F0F0"
  	symbol=';'
  }
  draw {
    z=1
  	fore="#C0C0C0"
  	symbol=':'
  }
  draw {
    z=2
  	fore="#909090"
  	symbol='|'
  }
  deny_desc="There is a hole here.  It's almost big enough to fit through."
  allow_desc="Lubricated, you slide through unhindered."
  ontop_desc="You stand across a narrow passageway."
}

tile "rock" { //5
  uniform_opacity=15
  movement_default="deny"
  draw {
    z=0
  	fore="#F0F0F0"
  	symbol='+'
  }
  draw {
    z=1
  	fore="#C0C0C0"
  	symbol='='
  }
  draw {
    z=2
  	fore="#909090"
  	symbol='-'
  }
  deny_desc="This rock takes up much of your cell.  The space behind it is invitingly dark."
  //ontop_desc is used if the player is standing on an empty tile above this tile.
  //it really only makes sense for things that can block movement.
  ontop_desc="This rock takes up much of your cell.  The space behind it is invitingly dark."
}

tile "branch" { //6
  uniform_opacity=15
  movement_default="deny"
  draw {
    z=0
  	fore="#8A360F"
  	symbol='/'
  }
  draw {
    z=1
  	fore="#8A360F"
  	symbol='.'
  }
  draw {
    z=2
  	fore="#471305"
  	symbol='\''
  }
  deny_desc="You bump into the edge of a very fun branch.  There's probably a way up somewhere."
  ontop_desc="The branch is fun.  It's the most fun thing in the cell."
}

tile "stairs" { //7
  floor_opacity=8
  ceiling_opacity=8
	wall_opacity=0
  movement_default="allow"
  draw {
    z=-1
  	fore="#666666"
  	symbol='+'
  }
  draw {
    z=0
  	fore="#FFFFFF"
  	symbol='<'
  }
  draw {
    z=1
  	fore="#AAAAAA"
  	symbol='>'
  }
  draw {
    z=2
  	fore="#666666"
  	symbol='-'
  }
//later, consider making stairs {} and pit {} use movement flag sets.
  stairs
  up_desc="You ascend the stairs."
  down_desc="You descend the stairs."
  allow_desc="These stairs are made of painted styrofoam.  Someone thought it might be cute."
}

tile "weakground" { //8
  floor_opacity=15
  movement_default="allow"
  draw {
    z=0
  	fore="#CCFF66"
  	symbol='x'
  }
  draw {
    z=1
  	fore="#99CC33"
  	symbol='*'
  }
  draw {
    z=2
  	fore="#669900"
  	symbol='+'
  }
  draw {
    z=3
  	fore="#336600"
  	symbol='-'
  }
  allow_desc="This spot slumps when you stand on it."
  //need this to start as a floor-door, and open to become empty space when triggered (landed on with weight)
  //this is distinct from wall-doors, which open to become floors when triggered.
  //in general, tiles will change their properties during actions.  probably shouldn't out-and-out swap indices,
  //but that would be easiest... if not, we potentially need to give context to every tile index.
  //another approach is to have doors as objects.  this gets the per-door context that will be needed.
}
map "cage" {
  ambient_light=8 //out of 15
  dimensions=[12, 12, 3]
	tilemap=[ //tank level, two floors and an inaccessible roof
	  2,2,2,2,2,2,2,2,2,2,2,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2, //probably will put the small rock up here? four from the right?
	  2,0,0,0,0,0,0,0,0,0,0,2, 
	  2,2,2,2,2,2,2,2,2,2,2,2,
	  
	  2,2,2,2,2,2,2,2,2,2,2,2,
	  2,0,0,0,0,0,0,0,0,0,0,2, //weakground passes through here
	  2,0,0,0,0,0,0,0,0,0,0,2, //branch passes thru on the right
	  2,0,0,0,0,0,0,0,0,0,0,2, //branch branch branch
	  2,0,0,0,0,0,0,0,0,0,0,2,
	  2,0,0,0,0,0,0,0,0,0,0,2, //stairs pass through here
	  2,0,0,0,0,0,0,0,0,0,7,2,
	  2,0,0,0,0,0,0,0,0,5,7,2,
	  2,0,0,0,0,0,0,0,5,5,5,2,
	  2,0,0,0,0,0,0,5,5,5,5,2,
	  2,0,0,0,0,0,0,0,5,0,0,2,
	  2,2,2,2,2,2,2,2,2,2,2,2,
	  
	  2,2,2,2,2,2,2,2,2,2,2,2,
	  2,3,3,3,3,1,1,1,1,8,8,2,
	  2,3,3,3,3,1,1,1,1,6,6,2,
	  2,3,3,3,1,1,1,1,1,6,6,2,
	  2,3,3,1,1,1,1,1,1,6,6,2,
	  2,1,1,1,1,1,1,1,1,7,7,2,
	  2,1,1,1,1,1,1,1,1,5,5,2,
	  2,1,1,1,1,1,1,1,5,5,5,2,
	  2,1,1,1,1,1,1,5,5,5,1,2,
	  2,1,1,1,1,1,5,5,5,5,1,2,
	  2,1,1,1,1,1,1,4,1,1,1,2,
	  2,2,2,2,2,2,2,2,2,2,2,2
	]
}
